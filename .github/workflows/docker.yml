name: Docker Image CI

on:
  push:
    branches-ignore:
      - 'abandoned-*'
  schedule:
    # Daily at 2AM
    # * is a special character in YAML so you have to quote this string
    - cron: '0 2 * * *'

env:
  DOCKER_REPO: ghcr.io/mahoney-playground
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  PROGRESS_NO_TRUNC: 1
  cache-name: docker-cache-16

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Cache docker
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/docker_cache
          # Always want a cache miss on the first build of the day, which should be the scheduled
          # overnight one. Proves the build works from scratch, and gives you a nice clean cache to
          # work with each day.
          key: ${{ env.cache-name }}_${{ steps.date.outputs.date }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            ${{ env.cache-name }}_${{ steps.date.outputs.date }}-${{ github.ref }}-
            ${{ env.cache-name }}_${{ steps.date.outputs.date }}-

      - name: Restore docker
        run: .github/actions/docker-cache/restore.sh ${{ runner.temp }}/docker_cache/cache.tar

      - name: Login to docker repo
        run: docker login --username Mahoney-playground --password-stdin ghcr.io < <(echo "${{ secrets.GITHUB_TOKEN }}")

      - name: Do the build
        run: docker build .
               --target gradle
               --build-arg BUILDKIT_INLINE_CACHE=1
               --cache-from ${{ env.DOCKER_REPO }}/goos-builder-cache
               -t ${{ env.DOCKER_REPO }}/goos-builder-cache &&
             docker push ${{ env.DOCKER_REPO }}/goos-builder-cache

      - name: Capture the reports as artifacts
        if: always()
        run: docker build . --target build-reports -t ${{ env.DOCKER_REPO }}/goos-build-report:${{ github.sha }}-${{ github.run_number }} &&
          docker push ${{ env.DOCKER_REPO }}/goos-build-report:${{ github.sha }}-${{ github.run_number }}

      - name: Build Auction XMPP Integration Tests with Docker
        run: docker build . --target auction-xmpp-integration-tests -t ${{ env.DOCKER_REPO }}/goos-auction-xmpp-integration-tests:$GITHUB_SHA &&
          docker push ${{ env.DOCKER_REPO }}/goos-auction-xmpp-integration-tests:$GITHUB_SHA

      - name: Build End to End Tests with Docker
        run: docker build . --target end-to-end-tests -t ${{ env.DOCKER_REPO }}/goos-end-to-end-tests:$GITHUB_SHA &&
          docker push ${{ env.DOCKER_REPO }}/goos-end-to-end-tests:$GITHUB_SHA

      - name: Build App with Docker
        run: docker build . --target instrumentedapp -t ${{ env.DOCKER_REPO }}/goos-instrumentedapp:$GITHUB_SHA &&
          docker push ${{ env.DOCKER_REPO }}/goos-instrumentedapp:$GITHUB_SHA

      - name: Backup docker
        run: .github/actions/docker-cache/backup.sh ${{ runner.temp }}/docker_cache/cache.tar

  publish-build-reports:
    if: always()
    needs: build
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Capture the reports as artifacts
        if: always()
        run: ./scripts/retrieve-docker-build-logs.sh ${{ env.DOCKER_REPO }}/goos-build-report ${{ github.sha }}-${{ github.run_number }}

      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: builds/${{ github.sha }}-${{ github.run_number }}/build-reports

      - name: Publish Reports
        if: always()
        uses: JamesIves/github-pages-deploy-action@3.4.2
        with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: builds
          TARGET_FOLDER: builds

      - name: Link to Reports
        if: always()
        run: echo "Reports are published at https://mahoney-playground.github.io/goos/builds/${{ github.sha }}-${{ github.run_number }}/build-reports"

  docker-openfire:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Login to docker repo
        run: docker login --username Mahoney-playground --password-stdin ghcr.io < <(echo "${{ secrets.GITHUB_TOKEN }}")

      - name: Build openfire with Docker
        run: cd docker-openfire && docker build .
          --build-arg BUILDKIT_INLINE_CACHE=1
          --cache-from ${{ env.DOCKER_REPO }}/openfire:4.5.1
          -t ${{ env.DOCKER_REPO }}/openfire:4.5.1 &&
          docker push ${{ env.DOCKER_REPO }}/openfire:4.5.1

  auction-xmpp-integration-tests:
    needs: [build, docker-openfire]
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Login to docker repo
        run: docker login --username Mahoney-playground --password-stdin ghcr.io < <(echo "${{ secrets.GITHUB_TOKEN }}")

      - name: Run auction xmpp integration tests
        env:
          GOOS_TAG: ${{ github.sha }}
        run: cd app-src/auction/xmpp-integration-tests &&
          docker-compose pull -q &&
          docker-compose up --no-build --exit-code-from auction-xmpp-integration-tests --abort-on-container-exit

      - name: Capture the reports as artifacts
        if: always()
        run:
          mkdir -p builds/${{ github.sha }} &&
          docker cp xmpp-integration-tests_auction-xmpp-integration-tests_1:/home/worker/work/build/reports builds/${{ github.sha }} &&
          mv builds/${{ github.sha }}/reports builds/${{ github.sha }}/auction-xmpp-integration-tests-reports

      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: auction-xmpp-integration-tests-reports
          path: builds/${{ github.sha }}/auction-xmpp-integration-tests-reports

      - name: Publish Reports
        if: always()
        uses: JamesIves/github-pages-deploy-action@3.4.2
        with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: builds
          TARGET_FOLDER: builds

      - name: Link to Reports
        if: always()
        run: echo "Reports are published at https://mahoney-playground.github.io/goos/builds/${{ github.sha }}/auction-xmpp-integration-tests-reports"

  end-to-end-tests:
    needs: [build, docker-openfire]
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Login to docker repo
        run: docker login --username Mahoney-playground --password-stdin ghcr.io < <(echo "${{ secrets.GITHUB_TOKEN }}")

      - name: Run end to end tests
        env:
          GOOS_TAG: ${{ github.sha }}
        run: cd end-to-end-tests &&
          docker-compose pull -q &&
          docker-compose up --no-build --exit-code-from end-to-end-tests --abort-on-container-exit

      - name: Capture the reports as artifacts
        if: always()
        run:
          mkdir -p builds/${{ github.sha }} &&
          docker cp end-to-end-tests_end-to-end-tests_1:/home/worker/work/build/reports builds/${{ github.sha }} &&
          mv builds/${{ github.sha }}/reports builds/${{ github.sha }}/end-to-end-tests-reports

      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: end-to-end-tests-reports
          path: builds/${{ github.sha }}/end-to-end-tests-reports

      - name: Publish Reports
        if: always()
        uses: JamesIves/github-pages-deploy-action@3.4.2
        with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: builds
          TARGET_FOLDER: builds

      - name: Link to Reports
        if: always()
        run: echo "Reports are published at https://mahoney-playground.github.io/goos/builds/${{ github.sha }}/end-to-end-tests-reports"
